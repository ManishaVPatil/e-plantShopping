sonar.exclusions=**/store/**, store/**, **/*.spec.*, **/*.layout.*, **/mock-server/**, **/setup/**, **/*config*, **/DeviceProtectionSelector/protectionPage.module.css, Dockerfile, scripts/**, public/nsa/ui/newrelic/**, **/styledComponents.*, templates/**, **/common/components/**, **/middleware.ts, app/common/fonts/**, app/componentManager/**, app/**/layout.tsx
sonar.coverage.exclusions=jest.setup.js, **/store/**, store/**, **/*.spec.*, **/*.layout.* , **/*config*, services/**, lighthouse/**, scripts/**, Dockerfile, public/nsa/ui/newrelic/**, **/styledComponents.*, templates/**, **/common/components/**, jest.config.js, **/tests/**, newrelic.cjs, **/middleware.ts, app/common/fonts/**, app/componentManager/**, app/**/layout.tsx
sonar.cpd.exclusions=



C:\Users\vinoma1\simpleMobile\onevz-value-digital-mfe-account\components\Footer\styles


const buttonEnable = (isBtnDisable) => {
    let enableVal;
    if (isBtnDisable) {
      if (confirmPswrdVal && confirmPasswrordvalidationMessage) {
        enableVal = emailVal?.trim() !== "" &&
          pswrdVal?.trim() !== "" &&
          confirmPswrdVal?.trim() !== "" &&
          pinVal?.trim() !== "" &&
          emailvalidationMessage?.trim() === "" &&
          passwrordvalidationMessage?.trim() === "" &&
          confirmPasswrordvalidationMessage?.trim() === "" &&
          pinvalidationMessage?.trim() === "" &&
          pswrdVal?.trim().length >= 8 &&
          (isCaptchaValid || props.scriptingJson[constantValues.LBL_REGRESSION_ENABLE_VERIFY] == constantValues.REGRESSION_ENABLE_VERIFY_VALUE) &&
          isAgeChecked  
        setButtonEnable(enableVal)
        return enableVal;
      } else {
        enableVal = emailVal?.trim() !== "" &&
          pswrdVal?.trim() !== "" &&
          pinVal?.trim() !== "" &&
          emailvalidationMessage?.trim() === "" &&
          passwrordvalidationMessage?.trim() === "" &&
          pinvalidationMessage?.trim() === "" &&
          pswrdVal?.trim().length >= 8 &&
          (isCaptchaValid || props.scriptingJson[constantValues.LBL_REGRESSION_ENABLE_VERIFY] == constantValues.REGRESSION_ENABLE_VERIFY_VALUE) &&
          isAgeChecked;
        setButtonEnable(enableVal);
        return enableVal;
      }
    } else {
      setButtonEnable(true);
      return true;
    }
  };
 props?.createAccountFields
